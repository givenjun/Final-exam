# Q.4 10점
#
# x축과 y축으로 이루어진 2차원 직교 좌표계에 중심이 원점인
# 서로 다른 크기의 원이 두 개 주어집니다.
# 반지름을 나타내는 두 정수 r1, r2가 매개변수로 주어질 때,
# 두 원 사이의 공간에 x좌표와 y좌표가 모두 정수인 점의 개수를
# return하도록 solution 함수를 완성해주세요.
# ※ 각 원 위의 점도 포함하여 셉니다.
#
# 제한사항
# 1 ≤ r1 < r2 ≤ 1,000,000
def solution(r1, r2):
    answer = 0 #answer값 초기화

    #y축을 제외한 1사분면에서 반지름이 r2인 원 내부에 있는 격자점 개수
    for x in range(1, r2):
        #1부터 (r2 - 1)까지 차례로 x에 대입되며 반복수행
        #y축을 제외하기 때문에 x를 1부터 설정
        y2 = (r2 * r2 - x * x) ** (1 / 2)
        #원의 방정식 x^2 + y^2 = r^2 -> y = sqrt(r^2 - x^2)를 이용
        #x=a, y=b라고 했을 때, y축 제외 1사분면에서 (a, 0)에서 (a, b)까지의 격자점은 b + 1개
        #(a, 0),(a, 1), (a, 2), ... , (a, b) -> N개
        #b가 실수일 때, N <= (b + 1) (N은 정수면서 최댓값)
        answer += int(y2) + 1
        #int(y2) + 1을 answer에 더하고 저장
        #x가 1일 때, (1, 0), (1, 1), (1, 2), ... , (1, int(y2)(1)) -> int((y2)(1)) + 1개
        #x가 2일 때, (2, 0), (2, 1), (2, 2), ... , (2, int((y2)(2))) -> int((y2)(2)) + 1개
        #                                    ...
        #x가 n일 때, (n, 0), (n, 1), (n, 2), ... , (n, int((y2)(n))) -> int((y2)(n)) + 1개
        #                                    ...
        #x가 (r2-1)일 때, (r2-1, 0), (r2-1, 1), (r2-1, 2), ... , (r2-1, int((y2)(r2-1))) -> int((y2)(r2-1)) + 1개
    answer += 1
    #위 for문에서 x = r2, y = 0 인 경우가 없으므로 추가 / 점 (r2, 0)

    #y축을 제외한 1사분면에서 반지름이 r1인 원 내부에 있는 격자점 갯수
    for x in range(1, r1):
        #1부터 (r1 - 1)까지 차례로 x에 대입되며 반복수행
        #y축을 제외하기 때문에 x를 1부터 설정
        y1 = (r1 * r1 - x * x) ** (1 / 2)        
        #원의 방정식 x^2 + y^2 = r^2 -> y = sqrt(r^2 - x^2)를 이용
        #x=a, y=b라고 했을 때, y축 제외 1사분면에서 (a, 0)에서 (a, b)까지의 격자점은 b + 1개
        #(a, 0),(a, 1), (a, 2), ... , (a, b) -> N개
        #b가 실수일 때, N <= (b + 1) (N은 정수면서 최댓값)
        if y1 == int(y1):
        #y1이 정수면 실행
            answer -= int(y1)
            #int(y1)을 answer에 빼고 저장 
            #y1이 정수면 원의 테두리에 위치하므로 두 원에서 중복되는 격자점
            #따라서 중복을 방지하기 위해 int(y1) + 1 - 1을 빼고 저장 
        else:
        #y1이 정수가 아니면 실행(실수)
            answer -= (int(y1) + 1)
            #(int(y1) + 1)을 answer에 빼고 저장
            #y2가 실수면 
    answer *= 4
    #1사분면의 격자점 개수를 구했으므로 좌표평면 전체의 격자점 개수를 계산
    return answer




